// client/src/utils/initialGameState.ts
import { GameState } from 'types/GameStateTypes.ts';

export const initialGameState: GameState = {
  player: {
    hand: [],
    deck: [],
    graveyard: [],
    field: Array(8).fill(null),
    mustDiscard: false,
    hasPlayedCard: false,
    lifePoints: 30,
    tokenCount: 0,
    tokenType: null,
  },
  opponent: {
    hand: [],
    deck: [],
    graveyard: [],
    field: Array(8).fill(null),
    mustDiscard: false,
    hasPlayedCard: false,
    lifePoints: 30,
    tokenCount: 0,
    tokenType: null,
  },
  game: {
    turn: 1,
    currentPhase: 'Standby',
    isMyTurn: false,
    activePlayerId: null,
    gameOver: false,
    winner: null,
  },
  ui: {
    hoveredCardId: null,
    hoveredTokenId: null,
    isCardHovered: false,
    isGraveyardOpen: false,
    isOpponentGraveyardOpen: false,
    isRightPanelOpen: false,
    isRightPanelHovered: false,
    isTokenZoneOpen: false,
    isOpponentTokenZoneOpen: false,
  },
  chat: {
    messages: [],
    input: '',
  },
  deckSelection: {
    selectedDecks: [],
    player1DeckId: null,
    player1Deck: [],
    player2Deck: [],
    hasChosenDeck: false,
    deckSelectionDone: false,
    initialDraw: [],
    selectedForMulligan: [],
    mulliganDone: false,
    isReady: false,
    bothReady: false,
    opponentReady: false,
    deckSelectionData: null,
    randomizers: [],
    waitingForPlayer1: false,
  },
  connection: {
    playerId: null,
    isConnected: false,
    canInitializeDraw: false,
  },
};