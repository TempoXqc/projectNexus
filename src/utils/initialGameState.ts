import { GameState } from '@tempoxqc/project-nexus-types';

export const initialGameState: GameState = {
  player: {
    id: 'player',
    nexus: { health: 30 },
    hand: [],
    deck: [],
    graveyard: [],
    field: Array(8).fill(null),
    opponentField: Array(8).fill(null),
    opponentHand: [],
    tokenPool: [],
    mustDiscard: false,
    hasPlayedCard: false,
    lifePoints: 30,
    tokenCount: 0,
    tokenType: null,
    mulliganDone: false,
    playmat: { id: '', name: '', image: '' },
  },
  opponent: {
    id: 'opponent',
    nexus: { health: 30 },
    hand: [],
    deck: [],
    graveyard: [],
    field: Array(8).fill(null),
    opponentField: Array(8).fill(null),
    opponentHand: [],
    tokenPool: [],
    mustDiscard: false,
    hasPlayedCard: false,
    lifePoints: 30,
    tokenCount: 0,
    tokenType: null,
    mulliganDone: false,
    playmat: { id: '', name: '', image: '' },
  },
  revealedCards: [],
  lastCardPlayed: undefined,
  lastDestroyedUnit: undefined,
  targetType: undefined,
  detected: false,
  currentCard: undefined,
  turnState: {
    unitsDeployed: [],
    discardedCardsCount: 0,
    temporaryKeywords: [],
    preventDestructionCards: [],
    battlePhaseDisabled: false,
  },
  game: {
    turn: 1,
    currentPhase: 'Standby',
    isMyTurn: false,
    activePlayerId: null,
    gameOver: false,
    winner: null,
    updateTimestamp: Date.now(),
  },
  ui: {
    hoveredCardId: null,
    hoveredTokenId: null,
    isCardHovered: false,
    isGraveyardOpen: false,
    isOpponentGraveyardOpen: false,
    isRightPanelOpen: false,
    isRightPanelHovered: false,
    isTokenZoneOpen: false,
    isOpponentTokenZoneOpen: false,
    isRevealedCardsOpen: false,
    isReorderCardsOpen: false,
    isSelectCardOpen: false,
    isChoiceOpen: false,
  },
  chat: {
    messages: [],
    input: '',
  },
  deckSelection: {
    selectedDecks: [],
    player1DeckId: null,
    player1Deck: [],
    player2Deck: [],
    hasChosenDeck: false,
    deckSelectionDone: false,
    initialDraw: [],
    selectedForMulligan: [],
    mulliganDone: false,
    isReady: false,
    bothReady: false,
    opponentReady: false,
    deckSelectionData: {
      player1DeckId: null,
      player2DeckIds: [],
      selectedDecks: [],
    },
    randomizers: [],
    waitingForPlayer1: true,
  },
  connection: {
    playerId: null,
    isConnected: false,
    canInitializeDraw: false,
  },
};